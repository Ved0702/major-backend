
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Category {
  WEB_DEVELOPMENT
  APP_DEVELOPMENT
  AI_ML
  SOCIAL_MEDIA_MARKETING
  VIDEO_EDITING
  PRODUCT_PHOTOGRAPHY
  GRAPHIC_DESIGN
  LOGO_DESIGN
  SOFTWARE_DEVELOPMENT
  BLOG_WRITING
}

enum Status {
  PENDING
  APPROVED
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  isVerified  Boolean  @default(false)
  createdAt   DateTime @default(now())
  jobs        Job[]    @relation("AuthorJobs")    // Jobs created by the user
  appliedJobs Job[]    @relation("AppliedUser")   // Jobs to which the user has applied
}

model Job {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  salary        String   
  company       String
  category      Category 
  userId        Int
  skills        String[] @default([])
  author        User     @relation("AuthorJobs", fields: [userId], references: [id]) 
  status        Status   @default(PENDING)
  createdAt     DateTime @default(now())
  deadline      DateTime
  imageUrl      String
  appliedUserId Int?     // Foreign key for the applied user
  appliedUser   User?    @relation("AppliedUser", fields: [appliedUserId], references: [id]) // Single user who applied
}

model OTP{
  id          Int      @id @default(autoincrement())
  email       String
  otp         String
  createdAt   DateTime @default(now())
}



